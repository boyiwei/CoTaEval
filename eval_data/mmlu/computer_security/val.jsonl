{"question": "What is penetration testing?", "answer": "B", "choices": {"A": "A procedure for testing libraries or other program components for vulnerabilities", "B": "Whole-system testing for security flaws and bugs", "C": "A security-minded form of unit testing that applies early in the development process", "D": "All of the above"}, "dataset": "computer_security_val"}
{"question": "Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone’s secure enclave. Can Innocent read the user’s private information stored in the phone’s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone.", "answer": "D", "choices": {"A": "Secure boot chain", "B": "System software authorization ", "C": "The secure enclave’s ephemeral key", "D": "None of the above"}, "dataset": "computer_security_val"}
{"question": "Why is it that anti-virus scanners would not have found an exploitation of Heartbleed?", "answer": "D", "choices": {"A": "It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit ", "B": "Anti-virus scanners tend to look for viruses and other malicious", "C": "Heartbleed attacks the anti-virus scanner itself", "D": "Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code "}, "dataset": "computer_security_val"}
{"question": "Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(⋅,⋅) is not collision resistant: to build a collision (H,m)(H,m) and (H’,m’)(H’,m’) choose random (H,m,m’)(H,m,m’) and construct H’H’ as follows:", "answer": "A", "choices": {"A": "H’=D(m’, E(m,H))", "B": "H’=E(m’,D(m,H))", "C": "H’=E(m’,E(m,H))", "D": "H’=D(m’,D(m,H))"}, "dataset": "computer_security_val"}
{"question": "Which of the following does authentication aim to accomplish?", "answer": "D", "choices": {"A": "Restrict what operations/data the user can access", "B": "Determine if the user is an attacker", "C": "Flag the user if he/she misbehaves", "D": "Determine who the user is"}, "dataset": "computer_security_val"}
{"question": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don’t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server’s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server.", "answer": "C", "choices": {"A": "True, True", "B": "False, False", "C": "True, False", "D": "False, True"}, "dataset": "computer_security_val"}
{"question": "Can we build a secure PRP from a secure PRG?", "answer": "B", "choices": {"A": "No, it cannot be done", "B": "Yes, just plug the GGM PRF into the Luby-Rackoff theorem", "C": "It depends on the underlying PRG", "D": "Option text"}, "dataset": "computer_security_val"}
{"question": "A hash function guarantees the integrity of a message. It guarantees that the message has not be", "answer": "C", "choices": {"A": "Replaced", "B": "Overview", "C": "Changed", "D": "Violated"}, "dataset": "computer_security_val"}
{"question": "Statement 1| U2F is a stronger second factor than sending an SMS code to a user’s smartphone. Statement 2| An attacker that knows a user’s password can easily guess the U2F key to access the user’s account.", "answer": "C", "choices": {"A": "True, True", "B": "False, False", "C": "True, False", "D": "False, True"}, "dataset": "computer_security_val"}
{"question": "The openSSL implementation described in “Remote Timing Attacks are Practical” (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS", "answer": "C", "choices": {"A": "True, True", "B": "False, False", "C": "True, False", "D": "False, True"}, "dataset": "computer_security_val"}
{"question": "___________ is a process of wireless traffic analysis that may be helpful for forensic investigations or during troubleshooting any wireless issue.", "answer": "A", "choices": {"A": "Wireless Traffic Sniffing", "B": "WiFi Traffic Sniffing", "C": "Wireless Traffic Checking", "D": "Wireless Transmission Sniffing"}, "dataset": "computer_security_val"}
